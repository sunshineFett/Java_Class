<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./assignment5_files/filelist.xml">
<link rel=Edit-Time-Data href="./assignment5_files/editdata.mso">
<title>Fundamentals</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>v054827</o:Author>
  <o:LastAuthor>Sunny Wear</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>438</o:TotalTime>
  <o:Created>2002-02-16T18:33:00Z</o:Created>
  <o:LastSaved>2002-02-16T18:33:00Z</o:LastSaved>
  <o:Pages>3</o:Pages>
  <o:Words>707</o:Words>
  <o:Characters>4032</o:Characters>
  <o:Company>GTE - TSI</o:Company>
  <o:Lines>33</o:Lines>
  <o:Paragraphs>8</o:Paragraphs>
  <o:CharactersWithSpaces>4951</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;
	text-underline:single;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
@list l0
	{mso-list-id:307051100;
	mso-list-type:hybrid;
	mso-list-template-ids:1468555250 -459241196 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l0:level1
	{mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level2
	{mso-level-number-format:alpha-lower;
	mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
</head>

<body lang=EN-US link=blue vlink=purple style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b>Inheritance,
Interfaces, Inner Classes<o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b>Assignment for
Lecture 5<o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></b></p>

<p class=MsoNormal><b><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></b></p>

<ol style='margin-top:0in' start=1 type=1>
 <li class=MsoNormal style='mso-list:l0 level1 lfo1;tab-stops:list .5in'><b>Create
     a file and within that file, write an interface called
     CarMaintenanceIF.<span style="mso-spacerun: yes">  </span>HINT:<i><span
     style="mso-spacerun: yes">  </span>Instead of using the keyword class, you
     will use the keyword interface.<o:p></o:p></i></b></li>
</ol>

<p class=MsoNormal style='margin-left:.25in'><b><i><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></i></b></p>

<p class=MsoNormal style='margin-left:.25in'><b><i><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></i></b></p>

<ol style='margin-top:0in' start=2 type=1>
 <li class=MsoNormal style='mso-list:l0 level1 lfo1;tab-stops:list .5in'><b>Within
     your interface, include method signatures for changeOil (), rotateTires
     (), and tuneUp () that take no parameters and return void for each
     method.<span style="mso-spacerun: yes">  </span>HINT:<span
     style="mso-spacerun: yes">  </span><i>An interface contains only method
     signatures, not method implementations (i.e., no { } ).<o:p></o:p></i></b></li>
</ol>

<p class=MsoNormal style='margin-left:.25in'><b><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></b></p>

<ol style='margin-top:0in' start=3 type=1>
 <li class=MsoNormal style='mso-list:l0 level1 lfo1;tab-stops:list .5in'><b>Create
     another file by creating a new class.<span style="mso-spacerun: yes"> 
     </span>Within the file, create a public class called Car.<span
     style="mso-spacerun: yes">  </span>This class will be your base
     class.<span style="mso-spacerun: yes">  </span><o:p></o:p></b></li>
</ol>

<p class=MsoNormal><b><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></b></p>

<ol style='margin-top:0in' start=4 type=1>
 <li class=MsoNormal style='mso-list:l0 level1 lfo1;tab-stops:list .5in'><b>Within
     your Car class, include at least one method (you may add more, if you
     like) called displayMaintenanceEvent () that takes in a String and returns
     void.<span style="mso-spacerun: yes">  </span><o:p></o:p></b></li>
</ol>

<p class=MsoNormal><b><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></b></p>

<ol style='margin-top:0in' start=5 type=1>
 <li class=MsoNormal style='mso-list:l0 level1 lfo1;tab-stops:list .5in'><b>Have
     the implementation for displayMaintenanceEvent () method print out string
     that is passed into the method.<span style="mso-spacerun: yes">  </span>If
     s is the name given to the string passed in then the syntax will look like
     this:<span style="mso-spacerun: yes">  </span>System.out.println(s); <o:p></o:p></b></li>
</ol>

<p class=MsoNormal><b><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></b></p>

<ol style='margin-top:0in' start=6 type=1>
 <li class=MsoNormal style='mso-list:l0 level1 lfo1;tab-stops:list .5in'><b>Have
     the Car class implement the CarMaintenanceIF interface. Within the
     implementation for each method invoke the displayMaintenanceEvent ()
     method, passing in as a String a description of the maintenance
     event.<span style="mso-spacerun: yes">  </span>For example, within the implementation
     for changeOil (), the string description will be “changing the oil”.<span
     style="mso-spacerun: yes">  </span>Likewise, for the implementation of the
     tuneUp() method, the string passed into the displayMaintenanceEvent() will
     be “Tuneup”; the syntax will look like this:<span style="mso-spacerun:
     yes">  </span>displayMaintenanceEvent(&quot;Tuneup&quot; );<o:p></o:p></b></li>
</ol>

<p class=MsoNormal><b><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></b></p>

<p class=MsoNormal><b><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></b></p>

<ol style='margin-top:0in' start=7 type=1>
 <li class=MsoNormal style='mso-list:l0 level1 lfo1;tab-stops:list .5in'><b>Create
     another file by creating a new class.<span style="mso-spacerun: yes"> 
     </span>Call the class LuxuryCar and it should be public.<span
     style="mso-spacerun: yes">  </span>This class will be a sub-class called
     that inherits from the Car class.<span style="mso-spacerun: yes">  </span><o:p></o:p></b></li>
</ol>

<p class=MsoNormal style='margin-left:.25in'><b><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></b></p>

<ol style='margin-top:0in' start=8 type=1>
 <li class=MsoNormal style='mso-list:l0 level1 lfo1;tab-stops:list .5in'><b>Create
     a default constructor. HINT:<span style="mso-spacerun: yes">  </span><i>same
     name as class, no return type, takes no parameters, has empty
     implementation block.</i><o:p></o:p></b></li>
</ol>

<p class=MsoNormal><b><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></b></p>

<ol style='margin-top:0in' start=9 type=1>
 <li class=MsoNormal style='mso-list:l0 level1 lfo1;tab-stops:list .5in'><b>Include
     4 instance variables for each of the following characteristics:<span
     style="mso-spacerun: yes">  </span>color, size, make, and year.<span
     style="mso-spacerun: yes">  </span>Make 2 of the datatypes of type string
     (size and make) and make 1 of one of datatype Color (color) and the last
     one of primitive datatype int (year).<span style="mso-spacerun: yes"> 
     </span>To use the Color class, you will need to import the following
     package:<span style="mso-spacerun: yes">  </span>java.awt.*;(import
     java.awt.*;)Initialize the values to the following:<span
     style="mso-spacerun: yes">  </span>Color.blue, Mid-size, BMW, 2002.<o:p></o:p></b></li>
</ol>

<p class=MsoNormal><b><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></b></p>

<ol style='margin-top:0in' start=10 type=1>
 <li class=MsoNormal style='mso-list:l0 level1 lfo1;tab-stops:list .5in'><b>Overload
     the constructor with a second constructor that takes in the 4 parameters
     of datatypes described above.<span style="mso-spacerun: yes"> 
     </span>Within the constructor, assign the parameters to their member
     counterparts.<span style="mso-spacerun: yes">  </span>HINT:<span
     style="mso-spacerun: yes">  </span><i>Your second constructor declaration
     will look like this:<span style="mso-spacerun: yes">  </span>public
     LuxuryCar (String size, Color color, int year, String make).<span
     style="mso-spacerun: yes">  </span>Then, within this constructor, assign
     (=) each parameter passed in to your instance variables.<span
     style="mso-spacerun: yes">  </span>You may want to use the this pointer,
     like so:<span style="mso-spacerun: yes">  </span>this.color = color;<o:p></o:p></i></b></li>
</ol>

<p class=MsoNormal><b><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></b></p>

<ol style='margin-top:0in' start=11 type=1>
 <li class=MsoNormal style='mso-list:l0 level1 lfo1;tab-stops:list .5in'><b>Write
     a main method within the LuxuryCar class and instantiate an object of the
     LuxuryCar class within it, be sure to use the overloaded constructor,
     passing in new values for each parameter expected.<span
     style="mso-spacerun: yes">  </span>HINT:<span style="mso-spacerun: yes"> 
     </span><i>Use new values OTHER than the values that you initialized the
     variables with, please be creative.</i><o:p></o:p></b></li>
</ol>

<p class=MsoNormal><b><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></b></p>

<ol style='margin-top:0in' start=12 type=1>
 <li class=MsoNormal style='mso-list:l0 level1 lfo1;tab-stops:list .5in'><b>Use
     the LuxuryCar object to invoke each of the maintenance events declared
     within the Car class. HINT:<span style="mso-spacerun: yes">  </span><i>For
     example, if your LuxuryCar object was called lc, then this is the syntax
     for invoking the changeOil method:<span style="mso-spacerun: yes"> 
     </span>lc.changeOil ();<o:p></o:p></i></b></li>
</ol>

<p class=MsoNormal><b><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></b></p>

<ol style='margin-top:0in' start=13 type=1>
 <li class=MsoNormal style='mso-list:l0 level1 lfo1;tab-stops:list .5in'><b>Finally,
     create another method within the LuxuryCar class called descCar that takes
     no parameters and returns nothing.<span style="mso-spacerun: yes"> 
     </span><o:p></o:p></b></li>
</ol>

<p class=MsoNormal><b><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></b></p>

<ol style='margin-top:0in' start=14 type=1>
 <li class=MsoNormal style='mso-list:l0 level1 lfo1;tab-stops:list .5in'><b>Within
     the descCar method, create a local class (inner class) called
     CarDescription.<span style="mso-spacerun: yes">  </span>Create an instance
     variable called size that is of the String datatype.<span
     style="mso-spacerun: yes">  </span>Initialize it’s value to something
     other than it’s current value, perhaps a string like “Large-sized Sedan”.
     Then, outside of the class CarDescription declaration, but within the
     descCar method, instantiate an instance of the CarDescription class.<span
     style="mso-spacerun: yes">  </span>Print out the value of the local inner
     class’s instance variable within the descCar method.<span
     style="mso-spacerun: yes">  </span>Invoke the descCar() method within
     main.<span style="mso-spacerun: yes">  </span>HINT:<span
     style="mso-spacerun: yes">  </span><i>here is the inner class code within
     the descCar method:</i><o:p></o:p></b></li>
</ol>

<p class=MsoNormal style='margin-left:.5in'><b><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></b></p>

<p class=MsoNormal><span style='font-family:Arial'><span style="mso-spacerun:
yes">  </span>void descCar() {<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><span style="mso-spacerun:
yes">      </span>// inner class declaration<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><span style="mso-spacerun:
yes">      </span>class CarDescription {<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><span style="mso-spacerun:
yes">        </span>String size = &quot;Large-sized sedan&quot;;<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><span style="mso-spacerun:
yes">      </span>};<span style="mso-spacerun: yes">  </span>// end of inner
class declaration<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><span style="mso-spacerun:
yes">    </span>// Instantiation of inner class object<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><span style="mso-spacerun:
yes">    </span>CarDescription cd = new CarDescription ();<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><span style="mso-spacerun:
yes">    </span><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><span style="mso-spacerun:
yes">    </span>System.out.println (&quot;My car is &quot; + cd.size + &quot;
&quot; + color + &quot; &quot; + year +&quot; &quot;+ make);<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><span style="mso-spacerun:
yes">  </span>}<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<ol style='margin-top:0in' start=15 type=1>
 <li class=MsoNormal style='mso-list:l0 level1 lfo1;tab-stops:list .5in'><b>Lastly,
     within the main method of the LuxuryCar<span style="mso-spacerun: yes"> 
     </span>class, use the LuxuryCar object to invoke the descCar() method. <o:p></o:p></b></li>
 <li class=MsoNormal style='mso-list:l0 level1 lfo1;tab-stops:list .5in'><b>***SPECIAL
     NOTE*** Realize that you only have one main method.<span
     style="mso-spacerun: yes">  </span>That main method is in your LuxuryCar
     class.<span style="mso-spacerun: yes">  </span>Therefore, when you try to
     run your class file (compiled code), make sure you set the project to run
     the<span style="mso-spacerun: yes">  </span>LuxuryCar.<span
     style="mso-spacerun: yes">  </span>Set Project Properties </b><b><span
     style='font-family:Wingdings;mso-ascii-font-family:"Times New Roman";
     mso-hansi-font-family:"Times New Roman";mso-char-type:symbol;mso-symbol-font-family:
     Wingdings'><span style='mso-char-type:symbol;mso-symbol-font-family:Wingdings'>à</span></span>
     Run </b><b><span style='font-family:Wingdings;mso-ascii-font-family:"Times New Roman";
     mso-hansi-font-family:"Times New Roman";mso-char-type:symbol;mso-symbol-font-family:
     Wingdings'><span style='mso-char-type:symbol;mso-symbol-font-family:Wingdings'>à</span></span>
     Main class:<span style="mso-spacerun: yes">  </span>&lt;package
     name&gt;.LuxuryCar<span style="mso-spacerun: yes">                       
     </span>If you should set it to either the Car class or the interface, it
     will not run!!!!<o:p></o:p></b></li>
</ol>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

</div>

</body>

</html>
